-- Query 1: Find the item that has the minimum weight
SELECT ITEMNO, DESCRIPTION, WEIGHT, COST
FROM ITEMS
WHERE WEIGHT = (SELECT MIN(WEIGHT) FROM ITEMS);

-- Query 2: Find the different warehouses in "PUNE"
SELECT DISTINCT WAREHOUSES.WNAME
FROM WAREHOUSES
JOIN CITIES ON WAREHOUSES.CITY = CITIES.CITY
WHERE CITIES.CITY = 'PUNE';

-- Query 3: Find the details of items ordered by a customer named "Mr. Patil".
SELECT CUSTOMER.CNAME, ITEMS.DESCRIPTION, ORDER_ITEMS.ORDERED_QUANTITY
FROM CUSTOMER
JOIN ORDERS ON CUSTOMER.CNO = ORDERS.CUSTOMER_ID
JOIN ORDER_ITEMS ON ORDERS.ONO = ORDER_ITEMS.ONO
JOIN ITEMS ON ORDER_ITEMS.ITEMNO = ITEMS.ITEMNO
WHERE CUSTOMER.CNAME = 'Mr. Patil';

-- Query 4: Find a Warehouse that has the maximum number of stores.
SELECT WAREHOUSES.WNAME, COUNT(STORES.SID) AS NUM_OF_STORES
FROM WAREHOUSES
LEFT JOIN STORES ON WAREHOUSES.WID = STORES.WAREHOUSE_ID
GROUP BY WAREHOUSES.WNAME
ORDER BY NUM_OF_STORES DESC
LIMIT 1;

-- Query 5: Find an item that is ordered for a minimum number of times
SELECT ITEMS.DESCRIPTION, COUNT(ORDER_ITEMS.ITEMNO) AS NUM_OF_ORDERS
FROM ITEMS
LEFT JOIN ORDER_ITEMS ON ITEMS.ITEMNO = ORDER_ITEMS.ITEMNO
GROUP BY ITEMS.DESCRIPTION
ORDER BY NUM_OF_ORDERS
LIMIT 1;

-- Query 6: Find the detailed orders given by each customer
SELECT CUSTOMER.CNAME, ORDERS.ONO, ITEMS.DESCRIPTION, ORDER_ITEMS.ORDERED_QUANTITY, (ITEMS.COST * ORDER_ITEMS.ORDERED_QUANTITY) AS TOTAL_COST
FROM CUSTOMER
JOIN ORDERS ON CUSTOMER.CNO = ORDERS.CUSTOMER_ID
JOIN ORDER_ITEMS ON ORDERS.ONO = ORDER_ITEMS.ONO
JOIN ITEMS ON ORDER_ITEMS.ITEMNO = ITEMS.ITEMNO
ORDER BY CUSTOMER.CNO, ORDERS.ONO;
